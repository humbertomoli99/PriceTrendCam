<Page
    x:Class="PriceTrendCam.Views.AddSelectorsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:PriceTrendCam.Behaviors"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local2="using:PriceTrendCam.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:PriceTrendCam.Core.Models"
    behaviors:NavigationViewHeaderBehavior.HeaderMode="Never"
    mc:Ignorable="d">

    <Page.Resources>
        <Style
            x:Key="HorizontalSwipe"
            BasedOn="{StaticResource DefaultListViewItemStyle}"
            TargetType="ListViewItem">
            <Setter Property="Height" Value="60" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
    </Page.Resources>

    <Grid x:Name="ContentArea" Margin="{StaticResource NavigationViewPageContentMargin}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button
                        x:Uid="BrowserBackButton"
                        Grid.Column="0"
                        Margin="{StaticResource XSmallTopBottomMargin}"
                        Padding="{StaticResource XXSmallLeftTopRightBottomMargin}"
                        Command="{x:Bind ViewModel.BrowserBackCommand, Mode=OneWay}">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE72B;" />
                    </Button>
                    <Button
                        x:Uid="BrowserForwardButton"
                        Grid.Column="1"
                        Margin="{StaticResource XSmallLeftTopRightBottomMargin}"
                        Padding="{StaticResource XXSmallLeftTopRightBottomMargin}"
                        Command="{x:Bind ViewModel.BrowserForwardCommand, Mode=OneWay}">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE72A;" />
                    </Button>
                    <Button
                        x:Uid="ReloadButton"
                        Grid.Column="2"
                        Margin="{StaticResource XSmallTopBottomMargin}"
                        Padding="{StaticResource XXSmallLeftTopRightBottomMargin}"
                        Command="{x:Bind ViewModel.ReloadCommand}">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE72C;" />
                    </Button>
                    <AutoSuggestBox
                        x:Name="AddressBar"
                        Grid.Column="3"
                        Margin="{StaticResource XSmallLeftTopRightBottomMargin}"
                        Padding="{StaticResource XXSmallLeftTopRightBottomMargin}"
                        HorizontalAlignment="Stretch"
                        PlaceholderText="Write a web address"
                        QueryIcon="Find"
                        QuerySubmitted="AddressBar_QuerySubmitted" />
                    <Button
                        x:Uid="OpenInBrowserButton"
                        Grid.Column="4"
                        Margin="{StaticResource XSmallTopBottomMargin}"
                        Padding="{StaticResource XXSmallLeftTopRightBottomMargin}"
                        Command="{x:Bind ViewModel.OpenInBrowserCommand}">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE774;" />
                    </Button>
                </Grid>

                <Grid Grid.Row="1">
                    <WebView2
                        x:Name="WebView"
                        NavigationCompleted="WebView_NavigationCompleted"
                        NavigationStarting="WebView_NavigationStarting"
                        PointerMoved="WebView_PointerMoved"
                        PointerPressed="WebView_PointerPressed"
                        Source="{x:Bind ViewModel.Source, Mode=OneWay}" />
                    <StackPanel
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}">
                        <ProgressRing IsActive="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                        <TextBlock x:Uid="WebView_Loading" />
                    </StackPanel>
                    <StackPanel
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Visibility="{x:Bind ViewModel.HasFailures, Mode=OneWay}">
                        <TextBlock
                            x:Uid="WebView_FailedMessage"
                            HorizontalAlignment="Center"
                            TextWrapping="WrapWholeWords" />
                        <HyperlinkButton
                            x:Uid="WebView_Reload"
                            HorizontalAlignment="Center"
                            Command="{x:Bind ViewModel.ReloadCommand}" />
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="2">
                    <StackPanel Orientation="Horizontal">
                        <Button
                            x:Name="ParentButton"
                            Margin="{StaticResource XSmallLeftTopRightBottomMargin}"
                            Padding="{StaticResource XXSmallLeftTopRightBottomMargin}"
                            Click="ParentButton_Click"
                            Content="Parent"
                            Visibility="Collapsed" />
                        <Button
                            x:Name="ChildrenButton"
                            Margin="{StaticResource XSmallLeftTopRightBottomMargin}"
                            Padding="{StaticResource XXSmallLeftTopRightBottomMargin}"
                            Click="ChildrenButton_Click"
                            Content="Children"
                            Visibility="Collapsed" />
                        <Button
                            x:Name="DoneButton"
                            Margin="{StaticResource XSmallLeftTopRightBottomMargin}"
                            Padding="{StaticResource XXSmallLeftTopRightBottomMargin}"
                            Click="DoneButton_Click"
                            Content="Done"
                            Style="{StaticResource AccentButtonStyle}"
                            Visibility="Collapsed" />
                        <TextBox
                            x:Name="TxtSelectedElement"
                            Margin="{StaticResource XSmallLeftTopRightBottomMargin}"
                            Padding="{StaticResource XXSmallLeftTopRightBottomMargin}"
                            Visibility="Collapsed" />
                    </StackPanel>
                </Grid>
            </Grid>
            <ScrollViewer Grid.Row="2">
                <TabView IsAddTabButtonVisible="False" TabWidthMode="Equal">
                    <TabViewItem Header="Selectors" IsClosable="False">

                        <TabViewItem.IconSource>
                            <SymbolIconSource Symbol="ClearSelection" />
                        </TabViewItem.IconSource>

                        <Grid
                            Padding="{StaticResource MediumLeftTopRightBottomMargin}"
                            Background="{ThemeResource SolidBackgroundFillColorTertiaryBrush}"
                            BorderThickness="1,0,1,1"
                            CornerRadius="0,0,5,5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <StackPanel Orientation="Horizontal">
                                <ComboBox
                                    x:Name="GetTypeDataComboBox"
                                    Grid.Row="0"
                                    MinWidth="200"
                                    Margin="0,5"
                                    Header="Type"
                                    ItemsSource="{x:Bind TypeDataComboBox, Mode=TwoWay}"
                                    PlaceholderText="Select a data type"
                                    SelectedItem="{x:Bind ViewModel.TypeDataComboBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    SelectionChanged="GetTypeDataComboBox_SelectionChanged" />
                                <CheckBox
                                    x:Name="IsNotNullCheckBox"
                                    Margin="{StaticResource SmallLeftRightMargin}"
                                    VerticalAlignment="Bottom"
                                    Content="Not Null"
                                    IsChecked="{x:Bind ViewModel.IsNotNullCheckBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>

                            <TextBlock Grid.Row="1">Selector:</TextBlock>
                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton
                                    x:Name="SelectButton"
                                    Grid.Column="0"
                                    Margin="0,0,10,0"
                                    Click="SelectButton_Click"
                                    Content="Select" />
                                <ToggleButton
                                    x:Name="ElementPreviewButton"
                                    Grid.Column="1"
                                    Margin="{StaticResource XSmallTopBottomMargin}"
                                    Click="ElementPreviewButton_Click"
                                    Content="Element Preview" />
                            </Grid>

                            <AutoSuggestBox
                                x:Name="SelectorAutoSuggestBox"
                                Grid.Row="3"
                                Margin="0,5"
                                HorizontalAlignment="Stretch"
                                PlaceholderText="Css Selector:"
                                Text="{x:Bind ViewModel.SelectorTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                TextChanged="SelectorAutoSuggestBox_TextChanged" />

                            <ComboBox
                                x:Name="GetAttributeComboBox"
                                Grid.Row="4"
                                Margin="0,5"
                                Header="Get Attribute"
                                IsEditable="True"
                                ItemsSource="{x:Bind AttributesComboBox, Mode=TwoWay}"
                                SelectedItem="{x:Bind ViewModel.GetAttributeComboBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                            <ListView
                                x:Name="ObjectSelector"
                                Grid.Row="5"
                                Height="500"
                                ContainerContentChanging="ListViewRight_ContainerContentChanging"
                                IsItemClickEnabled="True"
                                ItemContainerStyle="{StaticResource HorizontalSwipe}"
                                ItemsSource="{x:Bind collection}"
                                SelectionChanged="ObjectSelector_SelectionChanged"
                                SelectionMode="Single">
                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="local2:SelectorListItem">
                                        <UserControl PointerEntered="UserControl_PointerEntered" PointerExited="UserControl_PointerExited">
                                            <Grid AutomationProperties.Name="{x:Bind CssSelector}">
                                                <SwipeControl x:Name="ListViewSwipeContainer">
                                                    <SwipeControl.RightItems>
                                                        <SwipeItems Mode="Execute">
                                                            <SwipeItem
                                                                x:Name="DeleteSwipeItem"
                                                                Background="Red"
                                                                Command="{x:Bind Command}"
                                                                CommandParameter="{x:Bind CssSelector}" />
                                                        </SwipeItems>
                                                    </SwipeControl.RightItems>
                                                    <Grid VerticalAlignment="Center">
                                                        <TextBlock
                                                            Margin="10"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Center"
                                                            FontSize="18"
                                                            Text="{x:Bind CssSelector}" />
                                                        <AppBarButton
                                                            x:Name="HoverButton"
                                                            HorizontalAlignment="Right"
                                                            Command="{x:Bind Command}"
                                                            CommandParameter="{x:Bind CssSelector}"
                                                            IsTabStop="False"
                                                            Visibility="Collapsed" />
                                                    </Grid>
                                                </SwipeControl>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="HoveringStates">
                                                        <VisualState x:Name="HoverButtonsHidden" />
                                                        <VisualState x:Name="HoverButtonsShown">
                                                            <VisualState.Setters>
                                                                <Setter Target="HoverButton.Visibility" Value="Visible" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Grid>
                                        </UserControl>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                        </Grid>
                    </TabViewItem>
                    <TabViewItem Header="Regex" IsClosable="False">

                        <TabViewItem.IconSource>
                            <FontIconSource FontFamily="{StaticResource BootstrapIcons}" Glyph="&#xF84D;" />
                        </TabViewItem.IconSource>
                        <Grid
                            Padding="{StaticResource MediumLeftTopRightBottomMargin}"
                            Background="{ThemeResource SolidBackgroundFillColorTertiaryBrush}"
                            BorderThickness="1,0,1,1"
                            CornerRadius="0,0,5,5">
                            <StackPanel
                                Name="textBoxesStackPanel"
                                Grid.Row="1"
                                HorizontalAlignment="Stretch" />
                            <!--<Grid.RowDefinitions>
                                <RowDefinition
                                    Height="Auto" />
                                <RowDefinition
                                    Height="Auto" />
                            </Grid.RowDefinitions>-->
                            <!--<TextBox
                                Header="Regex"
                                x:Name="PatternTextBox"
                                Text="{x:Bind ViewModel.PatternTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                PlaceholderText="Pattern"
                                Grid.Row="0"
                                Margin="0,5" />

                            <TextBox
                                x:Name="ReplacementTextBox"
                                PlaceholderText="Replacement"
                                Text="{x:Bind ViewModel.ReplacementTextBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Grid.Row="1"
                                Margin="0,5" />-->
                        </Grid>
                    </TabViewItem>
                    <TabViewItem Header="Data Preview" IsClosable="False">

                        <TabViewItem.IconSource>
                            <FontIconSource FontFamily="{StaticResource BootstrapIcons}" Glyph="&#xF3AD;" />
                        </TabViewItem.IconSource>
                        <Grid
                            Padding="{StaticResource MediumLeftTopRightBottomMargin}"
                            Background="{ThemeResource SolidBackgroundFillColorTertiaryBrush}"
                            BorderThickness="1,0,1,1"
                            CornerRadius="0,0,5,5">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Title: " />
                                <TextBlock x:Name="PrevTitle" />
                            </StackPanel>

                            <StackPanel Grid.Row="1" Orientation="Horizontal">
                                <TextBlock Text="Description: " />
                                <TextBlock x:Name="PrevDescription" />
                            </StackPanel>

                            <StackPanel Grid.Row="2" Orientation="Horizontal">
                                <TextBlock Text="Status: " />
                                <TextBlock x:Name="PrevStatus" />
                            </StackPanel>


                            <StackPanel Grid.Row="3" Orientation="Horizontal">
                                <TextBlock Text="Price: " />
                                <TextBlock x:Name="PrevPrice" />
                            </StackPanel>

                            <StackPanel Grid.Row="4" Orientation="Horizontal">
                                <TextBlock Text="Spipping: " />
                                <TextBlock x:Name="PrevShipping" />
                            </StackPanel>

                            <StackPanel Grid.Row="5" Orientation="Horizontal">
                                <TextBlock Text="Stock: " />
                                <TextBlock x:Name="PrevStock" />
                            </StackPanel>

                        </Grid>
                    </TabViewItem>
                    <TabViewItem Header="Store" IsClosable="False">
                        <TabViewItem.IconSource>
                            <SymbolIconSource Symbol="Globe" />
                        </TabViewItem.IconSource>
                        <Grid
                            Padding="{StaticResource MediumLeftTopRightBottomMargin}"
                            Background="{ThemeResource SolidBackgroundFillColorTertiaryBrush}"
                            BorderThickness="1,0,1,1"
                            CornerRadius="0,0,5,5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <StackPanel
                                Grid.Row="0"
                                HorizontalAlignment="Stretch"
                                Orientation="Horizontal">
                                <Image
                                    x:Name="ImgFaviconStore"
                                    Width="50"
                                    Height="50"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Source="{x:Bind ViewModel.FaviconStore, Mode=OneWay}" />
                                <TextBlock
                                    x:Name="TxtNameStore"
                                    Margin="{StaticResource SmallLeftMargin}"
                                    VerticalAlignment="Center"
                                    Style="{ThemeResource TitleTextBlockStyle}"
                                    Text="{x:Bind ViewModel.StoreName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>

                            <TextBlock
                                x:Name="TxtDriveBrowserStore"
                                Grid.Row="1"
                                Text="{x:Bind ViewModel.DriverBrowser, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <ListBox
                                x:Name="LBStoreUrls"
                                Grid.Row="2"
                                ItemsSource="{x:Bind ViewModel.StoreUrls}">
                                <!--<ListBox.ItemTemplate>
                                    <DataTemplate
                                        x:DataType="models:StoreUrl">
                                        <StackPanel>
                                            <TextBlock
                                                Text="{x:Bind Url}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>-->
                            </ListBox>
                        </Grid>
                    </TabViewItem>
                </TabView>
            </ScrollViewer>

            <StackPanel
                Grid.Row="3"
                Margin="{StaticResource XSmallTopBottomMargin}"
                VerticalAlignment="Bottom"
                Orientation="Horizontal">
                <Button
                    x:Name="SaveButton"
                    Click="SaveButton_Click"
                    Command="{x:Bind ViewModel.SaveSelectorsCommand}"
                    Content="Save Selector"
                    Style="{StaticResource AccentButtonStyle}" />
                <Button
                    x:Name="CancelButton"
                    Margin="{StaticResource SmallLeftRightMargin}"
                    Click="CancelButton_Click"
                    Content="Cancel" />
                <Button
                    x:Name="DataPreviewButton"
                    Click="DataPreviewButton_Click"
                    Content="Data Preview" />
            </StackPanel>

            <controls:GridSplitter
                Grid.Row="1"
                Height="5"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                Background="Black" />

        </Grid>
        <TeachingTip
            x:Name="ElementNotExistTeachingTip"
            Title="The element does not exist"
            IsLightDismissEnabled="True"
            PlacementMargin="20"
            PreferredPlacement="Auto"
            Subtitle="The selected item does not exist on this page" />
    </Grid>
</Page>
